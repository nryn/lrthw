puts

  prints a string with a new line at the end

""

  double quotes when handling strings

#

  octothorpe used for commenting

\

  backslash used for escaping special characters in strings

=

  equals used to declare variables

"""

  triple double quotes used for handing multi-line strings, at both ends

#{foo}

  used for string interpolation

''

  single quotes  used for strings where no string interpolation is needed or should be suppressed

'''

  triple single quotes used a start and end of multi-line strings when interpolation is not needed or should be suppressed

print

  prints a string with no new line at the end

gets

  waits for and captures keyboard input from user (unless ARGVs are used)

chomp

  string method which removes the new line characters at the end of a string, often called after gets

to_i

  method which attempts to convert something to an integer

to_f

  method which attempts to convert something to a float

to_s

  method which attempts to convert something to a string

*

  multiplication operator

/

  division operator

-

  subtraction operator

+

  addition/concatenation operator

ARGV

  array containing the argument vector - arguments passed to a ruby script from the command line

ARGV.first

  first element in the ARGV array

$stdin

  the standard input, can be used with gets called on it to ensure gets doesn't check through ARGV first

open

  method that prepares a file for manipulation

open(foo, 'w')

  method that prepares a file for writing

read

  method that reads a file

close

  method that closes a file

truncate

  method that truncates a file, can be used with (0) as an argument to remove all the file's contents

,

  used to separate arguments, and other items in objects and arrays

()

  used for grouping arguments to be passed to a function, used in order of operations for arithmetic

seek

  method which changes I/O position

def

  defines a function

end

  ends a code block, used with loops, def, etc

>

  comparative operator greater than, returns boolean when used

<

  comparative operator less than, returns boolean when used

%

  modulus operator returns the remainder from the division of two numbers

%{}

  used to do string interpolation for multiple positions at once
